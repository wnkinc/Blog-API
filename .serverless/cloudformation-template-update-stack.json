{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AppLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/blog-api-local-app"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "blog-api",
                  "local",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/blog-api-local*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/blog-api-local*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "blog-api",
              "local",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AwsSdkLayerLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": "blogapiimagebucket",
          "S3Key": "serverless/blog-api/local/1740184712509-2025-02-22T00:38:32.509Z/awsSdkLayer.zip"
        },
        "LayerName": "blog-api-aws-sdk-layer",
        "CompatibleRuntimes": [
          "nodejs18.x"
        ]
      }
    },
    "AppLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "blogapiimagebucket",
          "S3Key": "serverless/blog-api/local/1740283505560-2025-02-23T04:05:05.560Z/blog-api.zip"
        },
        "Handler": "src/app.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "blog-api-local-app",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DATABASE_URL": "postgresql://postgres:B1baller1!@blogapidb.cvsse8mmqu3u.us-east-1.rds.amazonaws.com:5432/blogapidb?schema=public",
            "BLOG_API_BASE_URL": "https://api.bywk.dev",
            "COGNITO_CLIENT_ID": "7qkfnqt9m06hugfi6093ksvar5",
            "COGNITO_REDIRECT_URI": "https://api.bywk.dev/auth/callback",
            "COGNITO_TOKEN_ENDPOINT": "https://us-east-1ychprt5hz.auth.us-east-1.amazoncognito.com/oauth2/token",
            "COGNITO_LOGOUT_ENDPOINT": "https://us-east-1ychprt5hz.auth.us-east-1.amazoncognito.com/logout",
            "APP_ENV": "production",
            "APP_PORT": "8080",
            "APP_DOMAIN": "myapp.com",
            "DEBUG": "false",
            "COGNITO_JWKS_URI": "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_YChPrt5Hz/.well-known/jwks.json",
            "COGNITO_APP_CLIENT_ID": "7qkfnqt9m06hugfi6093ksvar5",
            "COGNITO_ISSUER_URI": "https://cognito-idp.us-east-1.amazonaws.com/us-east-1_YChPrt5Hz",
            "COGNITO_USER_POOL_ID": "us-east-1_YChPrt5Hz",
            "COGNITO_REGION": "us-east-1",
            "DEMO_USER": "RandomPanda",
            "DEMO_PASSWORD": "123abcA!",
            "S3_BUCKET_NAME": "blogapiimagebucket",
            "S3_REGION": "us-east-1",
            "COOKIE_DOMAIN": ".bywk.dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "AwsSdkLayerLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "AppLogGroup"
      ]
    },
    "AppLambdaVersionorhAFt121iKaXJebFpLs4WVQA95vNG7TFUVbdsBTO8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppLambdaFunction"
        },
        "CodeSha256": "9tezUz4KUw9HzTiNSvdkok/W1sLtpTy0GG5aFhlS3lw="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "local-blog-api",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1740283502654": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "local"
      },
      "DependsOn": [
        "ApiGatewayMethodAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "AppLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AppLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "blogapiimagebucket",
      "Export": {
        "Name": "sls-blog-api-local-ServerlessDeploymentBucketName"
      }
    },
    "AwsSdkLayerLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "AwsSdkLayerLambdaLayer"
      },
      "Export": {
        "Name": "sls-blog-api-local-AwsSdkLayerLambdaLayerQualifiedArn"
      }
    },
    "AwsSdkLayerLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "e6e669b63fcc15521a4904cf0b44fefc8d8775ff",
      "Export": {
        "Name": "sls-blog-api-local-AwsSdkLayerLambdaLayerHash"
      }
    },
    "AwsSdkLayerLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/blog-api/local/1740184712509-2025-02-22T00:38:32.509Z/awsSdkLayer.zip",
      "Export": {
        "Name": "sls-blog-api-local-AwsSdkLayerLambdaLayerS3Key"
      }
    },
    "AppLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppLambdaVersionorhAFt121iKaXJebFpLs4WVQA95vNG7TFUVbdsBTO8"
      },
      "Export": {
        "Name": "sls-blog-api-local-AppLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/local"
          ]
        ]
      },
      "Export": {
        "Name": "sls-blog-api-local-ServiceEndpoint"
      }
    }
  }
}